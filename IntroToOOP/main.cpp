#include<iostream>
using namespace std;

struct Point
{
	double x;
	double y;

	//Создавая структуру или класс мы создаем новый тип данных. Класс и структура это тип данных.
};

class Point
{
	double x;
	double y;

public:
	double get_x()const   //Метод get нужно делать константным. 
		         
	{
		return x;
	}
	double get_y()const
	{

		return y;
  }
	void set_x(double x)
	{

		this->x = x;   // This-> это указатель на объект для которого вызывается метод.
	}

	void set_y(double y)

	{
		this->y = y;

	}

};
//#define STRUCT_POINT
void main()
{
	setlocale(LC_ALL, "");




#ifdef STRUCT_POINT
	Point A; // "объявление переменной типа Point"
	//создание объекта/экземпляра А структуры Point

	A.x = 2;
	A.y = 3;

	cout << A.x << "\t" << A.y << endl;

	Point* pA = &A;

	cout << pA->x << "\t" << pA->y << endl;
#endif
	/*
	
	Доступ к полям объектов
	Для доступа к полям объектов может использоваться оператор точка или стрелка. 
	( .  )Точка - оператор прямого доступа. Используется для получения доступа к полям объекта по имени объекта
	( -> )Стрелка - оператор косвенного доступа. Для получения доступа к полям объекта по его адресу.
	
	*/
	 
	/*
	Инкапсуляция - сокрытие определенной части от внешнего. Реализуется модификаторами доступа и get-set методами. 
Модификаторы доступа :
private:  - закрытые поля, доступны внутри класса
public:      - открытые поля, доступны в любом месте
protected:     - защищенные поля, доступны внутри класса и дочерних классов. Этот модификатор используется только при наследовании. 
Единственное ОТЛИЧИЕ структуры и класса - структуры поля по умолчанию открыты, а у класса по умолчанию закрыты. 

     Переменные в обязательном порядке должны находится в private сессии класса. Переменная в public это нарушение инкапсуляции. 

	 get-set методы  

	 get - открывает доступ к переменным членам класса на ЧТЕНИЕ. (Позволяет получить значение закрытых переменных)
	 set - открывает доступ к закрытым переменным класса на ЗАПИСЬ. (Позволяет задать значение закрытых переменных)
	*/

}